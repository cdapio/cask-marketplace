{
  "parents": [
    "system:cdap-etl-batch[4.0.0,4.1.0-SNAPSHOT)",
    "system:cdap-etl-realtime[4.0.0,4.1.0-SNAPSHOT)",
    "system:cdap-data-pipeline[4.0.0,4.1.0-SNAPSHOT)",
    "system:cdap-data-streams[4.0.0,4.1.0-SNAPSHOT)"
  ],
  "properties": {
    "widgets.Cassandra-batchsink": "{\"metadata\": {\"spec-version\": \"1.0\"},\"configuration-groups\": [{\"label\": \"Cassandra Configuration\",\"properties\": [{\"widget-type\": \"textbox\",\"label\": \"Reference Name\",\"name\": \"referenceName\"},{\"widget-type\": \"textbox\",\"label\": \"Initial Address\",\"name\": \"initialAddress\"},{\"widget-type\": \"textbox\",\"label\": \"Port\",\"name\": \"port\"}]},{\"label\": \"Keyspace and Column Family\",\"properties\": [{\"widget-type\": \"textbox\",\"label\": \"Keyspace\",\"name\": \"keyspace\"},{\"widget-type\": \"textbox\",\"label\": \"Partitioner\",\"name\": \"partitioner\"},{\"widget-type\": \"textbox\",\"label\": \"Column Family\",\"name\": \"columnFamily\"},{\"widget-type\": \"csv\",\"label\": \"Primary Key\",\"name\": \"primaryKey\",\"widget-attributes\": {\"delimiter\": \",\"}},{\"widget-type\": \"csv\",\"label\": \"Columns\",\"name\": \"columns\",\"widget-attributes\": {\"delimiter\": \",\"}}]}],\"outputs\": []}",
    "widgets.Cassandra-batchsource": "{\"metadata\": {\"spec-version\": \"1.0\"},\"configuration-groups\": [{\"label\": \"Cassandra Configuration\",\"properties\": [{\"widget-type\": \"textbox\",\"label\": \"Reference Name\",\"name\": \"referenceName\"},{\"widget-type\": \"textbox\",\"label\": \"Initial Address\",\"name\": \"initialAddress\"},{\"widget-type\": \"textbox\",\"label\": \"Port\",\"name\": \"port\"},{\"widget-type\": \"textbox\",\"label\": \"Username\",\"name\": \"username\"},{\"widget-type\": \"password\",\"label\": \"Password\",\"name\": \"password\"},{\"widget-type\": \"keyvalue\",\"label\": \"Other Properties\",\"name\": \"properties\",\"widget-attributes\": {\"showDelimiter\": \"false\"}}]},{\"label\": \"Keyspace and Column Family\",\"properties\": [{\"widget-type\": \"textbox\",\"label\": \"Keyspace\",\"name\": \"keyspace\"},{\"widget-type\": \"textbox\",\"label\": \"Partitioner\",\"name\": \"partitioner\"},{\"widget-type\": \"textbox\",\"label\": \"Column Family\",\"name\": \"columnFamily\"},{\"widget-type\": \"textbox\",\"label\": \"CQL Query\",\"name\": \"query\"}]}],\"outputs\": [{\"name\": \"schema\",\"widget-type\": \"schema\",\"widget-attributes\": {\"schema-types\": [\"boolean\",\"int\",\"long\",\"float\",\"double\",\"bytes\",\"string\"],\"schema-default-type\": \"string\"}}]}",
    "widgets.Cassandra-realtimesink": "{\"metadata\": {\"spec-version\": \"1.0\"},\"configuration-groups\": [{\"label\": \"Cassandra Configuration\",\"properties\": [{\"widget-type\": \"textbox\",\"label\": \"Reference Name\",\"name\": \"referenceName\"},{\"widget-type\": \"csv\",\"label\": \"Addresses\",\"name\": \"addresses\",\"widget-attributes\": {\"delimiter\": \",\"}},{\"widget-type\": \"textbox\",\"label\": \"Consistency Level\",\"name\": \"consistencyLevel\"},{\"widget-type\": \"textbox\",\"label\": \"Compression\",\"name\": \"compression\"},{\"widget-type\": \"textbox\",\"label\": \"Username\",\"name\": \"username\"},{\"widget-type\": \"password\",\"label\": \"Password\",\"name\": \"password\"}]},{\"label\": \"Keyspace and Column Family\",\"properties\": [{\"widget-type\": \"textbox\",\"label\": \"Keyspace\",\"name\": \"keyspace\"},{\"widget-type\": \"textbox\",\"label\": \"Column Family\",\"name\": \"columnFamily\"},{\"widget-type\": \"csv\",\"label\": \"Columns\",\"name\": \"columns\",\"widget-attributes\": {\"delimiter\": \",\"}}]}],\"outputs\": []}",
    "doc.Cassandra-batchsink": "# Cassandra Batch Sink\n\n\nDescription\n-----------\nBatch sink to use Apache Cassandra as a sink.\n\n**Note** Apache Cassandra v. 2.1.0 is currently the only supported version of Apache Cassandra.\n\n\nUse Case\n--------\nThis sink is used whenever you need to write data into Cassandra.\nFor example, you may want to parse a file and read its contents into Cassandra,\nwhich you can achieve with a stream batch source and Cassandra as a sink.\n\n\nProperties\n----------\n**referenceName:** This will be used to uniquely identify this sink for lineage, annotating metadata, etc.\n\n**initialAddress:** The initial address to connect to. (Macro-enabled)\n\n**port:** The RPC port for Cassandra.\nCheck the configuration to make sure that ``start_rpc`` is true in ``cassandra.yaml``. (Macro-enabled)\n\n**keyspace:** The keyspace to inject data into.\nCreate the keyspace before starting the adapter. (Macro-enabled)\n\n**partitioner:** The partitioner for the keyspace. (Macro-enabled)\n\n**columnFamily:** The column family or table to inject data into.\nCreate the column family before starting the adapter. (Macro-enabled)\n\n**columns:** A comma-separated list of columns in the column family.\nThe columns should be listed in the same order as they are stored in the column family.\n\n**primaryKey:** A comma-separated list of primary keys.\n\n\nExample\n-------\nThis example connects to Apache Cassandra, which is running locally, and writes the data to\nthe specified column family (*employees*), which is in the *megacorp* keyspace.\nThis column family has four columns and two primary keys, and Apache Cassandra\nuses the default *Murmur3* partitioner:\n\n    {\n        \"name\": \"Cassandra\",\n        \"type\" \"batchsink\",\n        \"properties\": {\n            \"initialAddress\": \"localhost\",\n            \"port\": \"9160\",\n            \"keyspace\": \"megacorp\",\n            \"partitioner\": \"org.apache.cassandra.dht.Murmur3Partitioner\",\n            \"columnFamily\": \"employees\",\n            \"columns\": \"fname,lname,age,salary\",\n            \"primaryKey\": \"fname,lname\"\n        }\n    }\n",
    "doc.Cassandra-batchsource": "# Cassandra Batch Source\n\n\nDescription\n-----------\nBatch source to use Apache Cassandra as a source.\n\n**Note** Apache Cassandra v. 2.1.0 is currently the only supported version of Apache Cassandra.\n\n\nUse Case\n--------\nThis source is used whenever you need to read data from Apache Cassandra.\nFor example, you may want to read in a column family from Cassandra\nand store the data in an HBase table.\n\n\nProperties\n----------\n**referenceName:** This will be used to uniquely identify this source for lineage, annotating metadata, etc.\n\n**initialAddress:** The initial address to connect to. (Macro-enabled)\n\n**port:** The RPC port for Cassandra.\nCheck the configuration to make sure that ``start_rpc`` is true in ``cassandra.yaml``. (Macro-enabled)\n\n**keyspace:** The keyspace to select data from. (Macro-enabled)\n\n**partitioner:** The partitioner for the keyspace. (Macro-enabled)\n\n**username:** The username for the keyspace (if one exists).\nIf this is not empty, then you must supply a password. (Macro-enabled)\n\n**password:** The password for the keyspace (if one exists).\nIf this is not empty, then you must supply a username. (Macro-enabled)\n\n**columnFamily:** The column family or table to select data from. (Macro-enabled)\n\n**query:** The query to select data on. (Macro-enabled)\n\n**schema:** The schema for the data as it will be formatted in CDAP.\n\n**properties:** Any extra properties to include. The property-value pairs should be comma-separated,\nand each property should be separated by a colon from its corresponding value.\n\n\nExample\n-------\nThis example connects to Apache Cassandra, which is running locally, and reads in records in the\nspecified keyspace (*megacorp*) and column family (*employee*) which match the query to (in this case) select all records.\nAll data from the column family will be read on each run:\n\n    {\n        \"name\": \"Cassandra\",\n        \"type\": \"batchsource\",\n        \"properties\": {\n            \"initialAddress\": \"localhost\",\n            \"port\": \"9160\",\n            \"keyspace\": \"megacorp\",\n            \"partitioner\": \"org.apache.cassandra.dht.Murmur3Partitioner\",\n            \"columnFamily\": \"employees\",\n            \"query\": \"select * from employees where token(id) > ? and token(id) <= ?\",\n            \"schema\": \"{\n                \\\"type\\\":\\\"record\\\",\n                \\\"name\\\":\\\"etlSchemaBody\\\",\n                \\\"fields\\\":[\n                    {\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"long\\\"},\n                    {\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},\n                    {\\\"name\\\":\\\"age\\\",\\\"type\\\":\\\"int\\\"}\n                ]\n            }\"\n        }\n    }\n",
    "doc.Cassandra-realtimesink": "# Cassandra Real-time Sink\n\n\nDescription\n-----------\nReal-time sink to use Apache Cassandra as a sink.\n\n**Note** Apache Cassandra v. 2.1.0 is currently the only supported version of Apache Cassandra.\n\n\nUse Case\n--------\nThis sink is used whenever you need to write data into Cassandra.\nFor example, you may want, in real time, to collect purchase records\nand store them in Cassandra for later access.\n\n\nProperties\n----------\n**referenceName:** This will be used to uniquely identify this sink for lineage, annotating metadata, etc.\n\n**addresses:** A comma-separated list of address(es) to connect to.\n\n**keyspace:** The keyspace to inject data into.\nCreate the keyspace before starting the adapter.\n\n**username:** The username for the keyspace (if one exists).\nIf this is not empty, then you must also supply a password.\n\n**password:** The password for the keyspace (if one exists).\nIf this is not empty, then you must also supply a username.\n\n**columnFamily:** The column family or table to inject data into.\nCreate the column family before starting the adapter.\n\n**columns:** A comma-separated list of columns in the column family.\nThe columns should be listed in the same order as they are stored in the column family.\n\n**consistencyLevel:** The string representation of the consistency level for the query.\n\n**compression:** The string representation of the compression for the query.\n\n\nExample\n-------\nThis example connects to Apache Cassandra, which is running locally, and writes the data to\nthe specified keyspace (*megacorp*) and column family (*purchases*):\n\n    {\n        \"name\": \"Cassandra\",\n        \"type\": \"realtimesink\",\n        \"properties\": {\n            \"addresses\": \"localhost:9042\",\n            \"keyspace\": \"megacorp\",\n            \"columnFamily\": \"purchases\",\n            \"columns\": \"fname,lname,email,price\",\n            \"consistencyLevel\": \"QUORUM\",\n            \"compression\": \"NONE\"\n        }\n    }\n"
  }
}
